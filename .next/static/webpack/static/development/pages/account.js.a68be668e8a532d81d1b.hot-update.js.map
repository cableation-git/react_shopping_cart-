{"version":3,"file":"static/webpack/static\\development\\pages\\account.js.a68be668e8a532d81d1b.hot-update.js","sources":["webpack:///./components/Account/AccountHeader.js","webpack:///./components/Account/AccountOrders.js","webpack:///./components/Account/AccountPermissions.js","webpack:///./pages/account.js","webpack:///./utils/formatDate.js"],"sourcesContent":["import { Header, Icon, Segment, Label } from \"semantic-ui-react\";\nimport formatDate from \"../../utils/formatDate\";\n\nfunction AccountHeader({ role, email, name, createdAt }) {\n  return (\n    <Segment secondary inverted color=\"violet\">\n      <Label\n        color=\"teal\"\n        size=\"large\"\n        ribbon\n        icon=\"privacy\"\n        style={{ textTransform: \"capitalize\" }}\n        content={role}\n      />\n      <Header inverted textAlign=\"center\" as=\"h1\" icon>\n        <Icon name=\"user\" />\n        {name}\n        <Header.Subheader>{email}</Header.Subheader>\n        <Header.Subheader>Joined {formatDate(createdAt)}</Header.Subheader>\n      </Header>\n    </Segment>\n  );\n}\n\nexport default AccountHeader;\n","import {\n  Header,\n  Accordion,\n  Label,\n  Segment,\n  Icon,\n  Button,\n  List,\n  Image\n} from \"semantic-ui-react\";\nimport { useRouter } from \"next/router\";\nimport  formatDate  from \"../../utils/formatDate\";\n\nfunction AccountOrders({ orders }) {\n  const router = useRouter();\n\n  function mapOrdersToPanels(orders) {\n    return orders.map(order => ({\n      key: order._id,\n      title: {\n        content: <Label color=\"blue\" content=\n        {formatDate(order.createdAt)} />\n      },\n      content: {\n        content: (\n          <>\n            <List.Header as=\"h3\">\n              Total: ${order.total}\n              <Label\n                content={order.email}\n                icon=\"mail\"\n                basic\n                horizontal\n                style={{ marginLeft: \"1em\" }}\n              />\n            </List.Header>\n            <List>\n              {order.products.map(p => (\n                <List.Item>\n                  <Image avatar src={p.product.mediaUrl} />\n                  <List.Content>\n                    <List.Header>{p.product.name}</List.Header>\n                    <List.Description>\n                      {p.quantity} Â· ${p.product.price}\n                    </List.Description>\n                  </List.Content>\n                  <List.Content floated=\"right\">\n                    <Label tag color=\"red\" size=\"tiny\">\n                      {p.product.sku}\n                    </Label>\n                  </List.Content>\n                </List.Item>\n              ))}\n            </List>\n          </>\n        )\n      }\n    }));\n  }\n\n  return (\n    <>\n      <Header as=\"h2\">\n        <Icon name=\"folder open\" />\n        Order History\n      </Header>\n      {orders.length === 0 ? (\n        <Segment inverted tertiary color=\"grey\" textAlign=\"center\">\n          <Header icon>\n            <Icon name=\"copy outline\" />\n            No past orders.\n          </Header>\n          <div>\n            <Button onClick={() => router.push(\"/\")} color=\"orange\">\n              View Products\n            </Button>\n          </div>\n        </Segment>\n      ) : (\n        <Accordion\n          fluid\n          styled\n          exclusive={false}\n          panels={mapOrdersToPanels(orders)}\n        />\n      )}\n    </>\n  );\n}\n\nexport default AccountOrders;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Header, Checkbox, Table, Icon } from \"semantic-ui-react\";\nimport cookie from \"js-cookie\";\nimport baseUrl from \"../../utils/baseUrl\";\nimport formatDate from \"../../utils/formatDate\";\n\nfunction AccountPermissions() {\n  const [users, setUsers] = React.useState([]);\n\n  React.useEffect(() => {\n    getUsers();\n  }, []);\n\n  async function getUsers() {\n    const url = `${baseUrl}/api/users`;\n    const token = cookie.get(\"token\");\n    const payload = { headers: { Authorization: token } };\n    const response = await axios.get(url, payload);\n    setUsers(response.data);\n  }\n\n  return (\n    <div style={{ margin: \"2em 0\" }}>\n      <Header as=\"h2\">\n        <Icon name=\"settings\" />\n        User Permissions\n      </Header>\n      <Table compact celled definition>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell />\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Email</Table.HeaderCell>\n            <Table.HeaderCell>Joined</Table.HeaderCell>\n            <Table.HeaderCell>Updated</Table.HeaderCell>\n            <Table.HeaderCell>Role</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {users.map(user => (\n            <UserPermission key={user._id} user={user} />\n          ))}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n}\n\nfunction UserPermission({ user }) {\n  const [admin, setAdmin] = React.useState(user.role === \"admin\");\n  const isFirstRun = React.useRef(true);\n\n  React.useEffect(() => {\n    if (isFirstRun.current) {\n      isFirstRun.current = false;\n      return;\n    }\n    updatePermission();\n  }, [admin]);\n\n  function handleChangePermission() {\n    setAdmin(prevState => !prevState);\n  }\n\n  async function updatePermission() {\n    const url = `${baseUrl}/api/account`;\n    const payload = { _id: user._id, role: admin ? \"admin\" : \"user\" };\n    await axios.put(url, payload);\n  }\n\n  return (\n    <Table.Row>\n      <Table.Cell collapsing>\n        <Checkbox checked={admin} toggle onChange={handleChangePermission} />\n      </Table.Cell>\n      <Table.Cell>{user.name}</Table.Cell>\n      <Table.Cell>{user.email}</Table.Cell>\n      <Table.Cell>{formatDate(user.createdAt)}</Table.Cell>\n      <Table.Cell>{formatDate(user.updatedAt)}</Table.Cell>\n      <Table.Cell>{admin ? \"admin\" : \"user\"}</Table.Cell>\n    </Table.Row>\n  );\n}\n\nexport default AccountPermissions;\n","import AccountHeader from \"../components/Account/AccountHeader\";\nimport AccountOrders from \"../components/Account/AccountOrders\";\nimport AccountPermissions from \"../components/Account/AccountPermissions\";\nimport { parseCookies } from \"nookies\";\nimport baseUrl from \"../utils/baseUrl\";\nimport axios from \"axios\";\n//import formatDate from \"../../utils/formatDate\";\n\nfunction Account({ user, orders }) {\n  return (\n    <>\n      <AccountHeader {...user} />\n      <AccountOrders orders={orders} />\n      {user.role === \"root\" && <AccountPermissions />}\n    </>\n  );\n}\n\nAccount.getInitialProps = async ctx => {\n  const { token } = parseCookies(ctx);\n  if (!token) {\n    return { orders: [] };\n  }\n  const payload = { headers: { Authorization: token } };\n  const url = `${baseUrl}/api/orders`;\n  const response = await axios.get(url, payload);\n  return response.data;\n};\n\nexport default Account;\n","function formatDate(date) {\r\n  return new Date(date).toLocaleDateString('en-US')\r\n}\r\n\r\nexport default formatDate;"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACxBA;AAUA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AAdA;AANA;AAAA;AAyCA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AANA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AACA;AADA;AAIA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AACA;AAcfA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBA;AAAA;AACA;AAqBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AAJA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAAA;AACA;AADA;AAOA;AAPA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAUA;;;;;;;;;;;;AC7BA;AAAA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}